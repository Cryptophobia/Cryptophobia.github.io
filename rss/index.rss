<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>MOVEQ</title><description>MOVEQ R(brain), R(net)</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>MOVEQ</title><link>http://localhost:2368/</link></image><generator>Ghost 3.21</generator><lastBuildDate>Mon, 06 Jul 2020 20:46:44 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>AI Advantage</title><description>&lt;p&gt;If we take any game (chess for example) with a deterministic steps and all opponent data that is known to a computer at the time a game is played, then it simple to determine the AI's advantage. It could be written as the differential equations based on the optimization of&lt;/p&gt;</description><link>http://localhost:2368/ai-advantage/</link><guid isPermaLink="false">5f036b8ddca23ee5d050121c</guid><category>ai</category><category>math</category><category>logic</category><dc:creator>Cryptophobia</dc:creator><pubDate>Mon, 06 Jul 2020 19:21:42 GMT</pubDate><content:encoded>&lt;p&gt;If we take any game (chess for example) with a deterministic steps and all opponent data that is known to a computer at the time a game is played, then it simple to determine the AI's advantage. It could be written as the differential equations based on the optimization of the current state of the game, in any given step (\( t_x \)). Given data terms \( D_1 \) and \(D_2 \) and where \(O() \) and \(h() \) are the optimization and heuritic functions respectively. In the case of computer vs. player playing chess, there is not much of a strategy so the heuristic strategy function can be ignored there. \(C_H\) is also the computer-human handicap factor, when the data of the game is not fully know. In the case of chess, all data to make decisions at a given step \( t_x \) is on the board at any given time so a computer-human handicap is not a factor.&lt;/p&gt;&lt;p&gt;AI (CA=Computer Advantage) Eq1: \[ O(D_1) + h(t_x) = CA \]&lt;/p&gt;&lt;p&gt;Player (HA=Human Advantage) Eq2: \[ O(D_2 \times C_H) + h(t_x) = HA \]&lt;/p&gt;&lt;p&gt;For any given step \( t_x \), in a deterministic game like chess, the relative game theory win conditions are simple:&lt;/p&gt;&lt;p&gt;\( if CA &amp;gt; HA  then  C  wins  \)&lt;/p&gt;&lt;p&gt;\( if HA &amp;gt; CA  then  H  wins  \) &lt;/p&gt;&lt;p&gt;In non-deterministic games, where we have randomness and unkown data in any given step, it is possible to introduce an error rate into CA: \( O(D_1 \times E_t) \)&lt;/p&gt;&lt;p&gt;Proposition: If the human player is able to introduce an error rate into optimization function of CA by introducing random noise into \( D_1 \) then the human player is able to increase the effectiveness of his heuristic strategy in the term \( h(t_x) \) in any give step. The interesting thing is that if \( h() \) term is able to create the error term introduced then human-player handicap can disappear in many non-deterministic random games.&lt;/p&gt;&lt;p&gt;Our equations become:&lt;/p&gt;&lt;p&gt;AI (CA=Computer Advantage) Eq1: \[ O(D_1 \times E_t) + h(t_x) = CA \]&lt;/p&gt;&lt;p&gt;Player (HA=Human Advantage) Eq2: \[ O(D_2 \times C_H) + h(t_x) = HA \]&lt;/p&gt;&lt;p&gt;Error Heuristic Eq3: \[ E_t = h_e(t_x) \]&lt;/p&gt;&lt;p&gt;The proposition is based on an assumption that CA optimization \( O(D_1 \times E_t) \) is not able to change from step to step fast enough to optimize for correction due to the introduction of the human created noise. &lt;/p&gt;&lt;p&gt;The opposite is also true, if CA can introduce its own noise into the HA optimization function, then the human-player handicap becomes even larger.&lt;/p&gt;&lt;p&gt;The question now is, when does the game become unplayable because of too much noise and fake data introduced into the game by the two players (the human and the computer). But even if the optimizations \(O()\) of CA and HA become unreliable and useless, we are back to who has the best heuritic functions \(h(t_x) \). Even if the rules remain the same for the non-deterministic game, are we still playing the same game then or has the game changed too? :)&lt;/p&gt;&lt;p&gt;The next step is to decompose \( O() \) and \( h() \) into their respective partial differential differential equations with learning rates. Maybe in the end, only the most efficient strategies and simple efficient optimization functions win.&lt;/p&gt;&lt;p&gt;Which brings me to my next proposition:&lt;/p&gt;&lt;p&gt;The learning rate as time reaches infinity of computers and humans is inherently different. Our brains are biological systems. Biological systems are trained through millions of years allowing us to make very optimized decisions with limited data in any given step. &lt;/p&gt;&lt;p&gt;Imagine a world where all non-deterministic games have so much random noise that they are virtually unplayable, which player will be able to adapt quicker?&lt;/p&gt;</content:encoded></item><item><title>Rotating Kops and Hephy Credentials</title><description>&lt;p&gt;Sometimes you need to rotate all credentials in long-running Kubernetes clusters which are usually created automatically by your deployment tool of choice. This happens as certificates and other automatically created secrets could expire. In my case, this happened because the etcd internal TLS certificate expired.&lt;/p&gt;&lt;p&gt;In the TeamHephy cluster we&lt;/p&gt;</description><link>http://localhost:2368/rotating-kops-credentials-and-hephy-secrets/</link><guid isPermaLink="false">5efe10ca130471bb0edae219</guid><category>hephy</category><category>tutorial</category><dc:creator>Cryptophobia</dc:creator><pubDate>Thu, 02 Jul 2020 17:32:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/07/Selection_149-1.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/07/Selection_149-1.png" alt="Rotating Kops and Hephy Credentials"&gt;&lt;p&gt;Sometimes you need to rotate all credentials in long-running Kubernetes clusters which are usually created automatically by your deployment tool of choice. This happens as certificates and other automatically created secrets could expire. In my case, this happened because the etcd internal TLS certificate expired.&lt;/p&gt;&lt;p&gt;In the TeamHephy cluster we use &lt;a href="https://github.com/kubernetes/kops"&gt;kops&lt;/a&gt; as the deployment tool for AWS and there is a great guide written by the kops maintainers for rotating all the k8s control plane secrets:&lt;/p&gt;&lt;p&gt;Link: &lt;a href="https://github.com/kubernetes/kops/blob/master/docs/rotate-secrets.md"&gt;Rotate Kops Secrets and Credentials Guide&lt;/a&gt;&lt;/p&gt;&lt;h3 id="resetting-your-passwords-in-hephy-workflow-"&gt;&lt;br&gt;Resetting your passwords in Hephy Workflow:&lt;/h3&gt;&lt;p&gt;(hephy-controller and deis-controller are used interchangeably here)&lt;/p&gt;&lt;h4 id="case-1-you-are-not-an-admin-in-hephy-controller-ask-your-administrator-to-exec-deis-auth-passwd-user-your_account-"&gt;&lt;br&gt;Case 1: You are not an admin in hephy-controller:&lt;br&gt;&lt;br&gt;Ask your administrator to exec:  &lt;code&gt;deis auth:passwd --user {your_account}&lt;/code&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ deis auth:passwd --help
Changes the password for the current user.

Usage: deis auth:passwd [options]

Options:
--password=the current password for the account.
--new-password=the new password for the account.
--username=the account's username.&lt;/code&gt;&lt;/pre&gt;&lt;h4 id="case-2-you-are-the-one-and-only-administrator-in-hephy-controller-"&gt;&lt;br&gt;Case 2: You are the one and only administrator in hephy-controller:&lt;/h4&gt;&lt;p&gt;Find your deis-controller pod:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ kubectl get pods -n deis | grep -i "deis-controller"
deis-controller-762839819f-a6fzn                  1/1     Running   0          15d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Execute the command to get into Django managment shell:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;$ kubectl exec --namespace=deis -it deis-controller-762839819f-a6fzn ./manage.py shell
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now in the interactive management console:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt;&amp;gt;&amp;gt; from django.contrib.auth.models import User
&amp;gt;&amp;gt;&amp;gt; u = User.objects.get(username__exact='{your_account_name}')
&amp;gt;&amp;gt;&amp;gt; u.set_password('{new_password_plain_text}')
&amp;gt;&amp;gt;&amp;gt; u.save()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can then exit by typing &lt;code&gt;exit()&lt;/code&gt; or pressing &lt;code&gt;&lt;code&gt;Ctrl-D&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;h4 id="notes-"&gt;Notes:&lt;/h4&gt;&lt;p&gt;&lt;code&gt;deis-controller-762839819f-a6fzn&lt;/code&gt; is the pod name of the deis-controller.&lt;/p&gt;&lt;p&gt;Modify &lt;code&gt;{your_account_name}&lt;/code&gt; and &lt;code&gt;{new_password_plain_text}&lt;/code&gt; as you like.&lt;br&gt;&lt;/p&gt;</content:encoded></item><item><title>A Micro-Soft Joke</title><description>&lt;p&gt;This post is going to be a retelling of a joke I read in an interview prep book called &lt;a href="https://www.amazon.com/Are-Smart-Enough-Work-Google/dp/0316099988"&gt;"Are You Smart Enough to Work at Google?"&lt;/a&gt;. The joke goes like this...&lt;/p&gt;&lt;p&gt;A pilot was flying around when a technical problem disabled all of the helicopter's electronic navigation and communications&lt;/p&gt;</description><link>http://localhost:2368/a-joke/</link><guid isPermaLink="false">5efcf0bb830d277e4a4ecae3</guid><category>joke</category><category>funny</category><dc:creator>Cryptophobia</dc:creator><pubDate>Wed, 01 Jul 2020 21:06:30 GMT</pubDate><content:encoded>&lt;p&gt;This post is going to be a retelling of a joke I read in an interview prep book called &lt;a href="https://www.amazon.com/Are-Smart-Enough-Work-Google/dp/0316099988"&gt;"Are You Smart Enough to Work at Google?"&lt;/a&gt;. The joke goes like this...&lt;/p&gt;&lt;p&gt;A pilot was flying around when a technical problem disabled all of the helicopter's electronic navigation and communications equipment. The weather and fog were so bad that the helicopter pilot could not tell where he was. Looking around, the pilot was able to see a tall building and he flew towards it, circled around, and held up a sign that said "Where am I?" in large bold letters.&lt;/p&gt;&lt;p&gt;People in the tall building quickly responded by drawing their own sign: "You are in a helicopter".&lt;br&gt;&lt;br&gt;The pilot smiled, thanked them with a gesture, looked at his map and determined the route back to the airport and landed safely.&lt;br&gt;&lt;br&gt;After landing the passengers asked the pilot how could he know where to go?&lt;br&gt;&lt;br&gt;The pilot said: "I knew that building had to be the Micro-soft headquarters, because they gave me technically correct but completely useless answer."&lt;/p&gt;&lt;p&gt;Hahaha!&lt;/p&gt;</content:encoded></item></channel></rss>